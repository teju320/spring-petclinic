version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: petclinic
      MYSQL_USER: petclinic
      MYSQL_PASSWORD: petclinic
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - petclinic-net

  app:
    image: spring-petclinic:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spring-petclinic
    ports:
      - "8081:8080"
    depends_on:
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/petclinic
      SPRING_DATASOURCE_USERNAME: petclinic
      SPRING_DATASOURCE_PASSWORD: petclinic
    networks:
      - petclinic-net

  build-java8:
    image: openjdk:8
    container_name: build-java8
    working_dir: /app
    volumes:
      - .:/app
    command: mvn clean compile
    networks:
      - petclinic-net

  test-java11:
    image: openjdk:11
    container_name: test-java11
    working_dir: /app
    volumes:
      - .:/app
    command: mvn test
    networks:
      - petclinic-net

  sonar-java17:
    image: openjdk:17
    container_name: sonar-java17
    working_dir: /app
    volumes:
      - .:/app
    command: >
      bash -c "mvn verify sonar:sonar -Dsonar.projectKey=petclinic
               -Dsonar.host.url=http://sonarqube:9000
               -Dsonar.login=your_token"
    depends_on:
      - sonarqube
    networks:
      - petclinic-net

  sonarqube:
    image: sonarqube:latest
    container_name: sonarqube
    ports:
      - "9000:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    networks:
      - petclinic-net

volumes:
  db_data:

networks:
  petclinic-net:
